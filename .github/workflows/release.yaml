name: Release on Commit

on:
  push:
    branches:
      - main # 或者你希望监听的其他分支

jobs:
  check-and-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # 获取所有历史提交以检查最新一次提交信息

    - name: Get Latest Commit Message
      id: commit_message
      run: |
        echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.sha }})"

    - name: Set Commit Message
      run: |
        echo "COMMIT_MSG=${{ steps.commit_message.outputs.message }}" >> $GITHUB_ENV

    - name: Check Commit Prefix and Extract Version
      id: version_check
      if: contains(toJson(steps.commit_message.outputs.message), 'v.') || contains(toJson(steps.commit_message.outputs.message), 'pre.')
      run: |
       VERSION=$(echo "$COMMIT_MSG" | grep -Eo '^(v|pre)\.[0-9.]*')
       TRIGGER=$(echo "$VERSION" | grep -oE '^[vp]')

        if [ -z "$VERSION" ]; then
          echo "No valid version prefix found in commit message."
          exit 1
        fi

        echo "::set-output name=valid::true"
        echo "::set-output name=version::$VERSION"
        echo "::set-output name=trigger::$TRIGGER"

  integration-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - uses: actions/checkout@v4
    - name: Create a Release
      uses: elgohr/Github-Release-Action@main
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        title: ${{ github.sha }}

  release:
    runs-on: ubuntu-latest
    needs:
      - integration-test
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.RELEASE_TOKEN }} # for pushing to protected branch
      - name: Publish new version
        run: |
          git config --global user.email "jimmyrss1102@gmail.com"
          git config --global user.name "阿 Cai"
          git tag main -m  ${{VERSION}}
          git push origin main --force
